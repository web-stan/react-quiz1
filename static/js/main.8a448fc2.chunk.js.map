{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","components/UI/Louder/Louder.module.css","containers/Quiz/Quiz.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/BackDrops/BackDrops.module.css","components/ActiveQuiz/AnswerList/AnswerList.module.css","containers/QiuzList/QiuzList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Input/Input.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrops/BackDrops.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswerList/AnswerList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Louder/Louder.js","store/actions/quiz.js","store/actions/actionsTypes.js","containers/Quiz/Quiz.js","containers/QiuzList/QiuzList.js","components/Form/formFramework.js","components/UI/Input/Input.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","store/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","onClick","onToggle","className","join","icon","faTimes","faBars","BackDrops","dropsHandlerClose","Drawer","links","map","link","index","key","to","exact","activeClassName","active","label","console","log","this","isAuthenticated","close","Fragment","renderLinks","Component","Layout","state","menuOpen","setState","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswerList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","resalts","reduce","tottal","quiz","quizItem","cls1","success","style","marginLeft","faCheck","error","length","retry","Louder","Center","fetchQuizesSuccess","quizes","fetchQuizesError","err","fetchQuizSuccess","qiuzAnswerClick","idAnswer","dispatch","getState","answerState","activeQuestion","rightAnswer","quizSetState","timeOut","window","setTimeout","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","axios","get","response","data","QiuzList","name","fetchQuizes","renderQuiz","createControls","config","validation","valid","touched","value","validate","isValid","required","trim","validateForm","formControls","isValidForm","control","hasOwnProperty","Input","inputType","htmlFor","Math","random","onChange","errorMessage","Select","options","option","createOptionControl","number","createFormControl","option1","option2","option3","option4","QuizCreator","rightAnswerId","addQuestionHandler","event","preventDefault","questionItems","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","controlName","inputKind","renderControls","target","selectChangeHandler","select","onSubmit","submitHandler","create","post","authSuccess","authLogout","time","dispath","logout","localStorage","removeItem","validateEmail","email","test","String","toLowerCase","Auth","isFormValid","password","loginHandler","registerHandler","inputName","valueInput","Number","input","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,yB,mBCAzFD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,2BAA2B,MAAQ,4BAA4B,QAAU,gC,mBCApJD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,mBCArED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,mBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,MAAQ,4B,mBCA5GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,QAAU,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,2BAA2B,UAAY,0BAA0B,OAAS,yB,mBCAzID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,yB,mOC0BZC,EAnBI,SAAAC,GAEf,IAAMC,EAAM,CACRC,IAAQH,YAOZ,OAJIC,EAAMG,QACNF,EAAIG,KAAKF,IAAQG,MAIT,kBAAC,IAAD,CACAC,QAASN,EAAMO,SACfC,UAAWP,EAAIQ,KAAK,KACpBC,KAAMV,EAAMG,OAASQ,IAAUC,O,kCCnBhC,WAACZ,GAAD,OAAW,yBAAKQ,UAAWN,IAAQW,UAAWP,QAASN,EAAMc,qB,QC4E7DC,E,0KArDCC,GAAQ,IAAD,OACf,OAAOA,EAAMC,KAAI,SAACC,EAAMC,GACpB,OACA,wBAAIC,IAAKD,GACL,kBAAC,IAAD,CACIE,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,gBAAiBrB,IAAQsB,OACzBlB,QAAS,EAAKN,MAAMc,mBACtBI,EAAKO,a,+BASfC,QAAQC,IAAI,OAAQC,KAAK5B,MAAM6B,iBAE/B,IAAIb,EAAS,CACT,CAACK,GAAI,IAAKI,MAAO,uCAAUH,OAAO,IAGlCM,KAAK5B,MAAM6B,gBACXb,EAAMZ,KAAK,CAACiB,GAAI,gBAAiBI,MAAO,sEAAgBH,OAAO,GACnD,CAACD,GAAI,UAAWI,MAAO,iCAASH,OAAO,IAEnDN,EAAMZ,KAAK,CAACiB,GAAI,QAASI,MAAO,qEAAeH,OAAO,IAG1D,IAAMrB,EAAM,CAACC,IAAQa,QAKrB,OAJKa,KAAK5B,MAAMG,QACZF,EAAIG,KAAKF,IAAQ4B,OAIjB,kBAAC,IAAMC,SAAP,KACA,yBAAKvB,UAAWP,EAAIQ,KAAK,MACrB,4BACKmB,KAAKI,YAAYhB,KAGzBY,KAAK5B,MAAMG,OACV,kBAACU,EAAD,CAAYC,kBAAmBc,KAAK5B,MAAMc,oBAC1C,U,GA/COmB,a,OClBfC,E,4MAEFC,MAAQ,CACJC,UAAU,G,EAGd7B,SAAW,WACP,EAAK8B,SAAS,CAAED,UAAW,EAAKD,MAAMC,Y,EAG1CtB,kBAAoB,WAChB,EAAKuB,SAAS,CAAED,UAAU,K,uDAK1B,OACI,yBAAK5B,UAAWN,IAAQgC,QACpB,kBAAC,EAAD,CACA/B,OAAQyB,KAAKO,MAAMC,SACnBtB,kBAAqBc,KAAKd,kBAC1Be,gBAAiBD,KAAK5B,MAAM6B,kBAG5B,kBAAC,EAAD,CACA1B,OAAQyB,KAAKO,MAAMC,SACnB7B,SAAUqB,KAAKrB,WAGf,8BACKqB,KAAK5B,MAAMsC,e,GA9BXL,aA2CNM,mBANf,SAAyBJ,GACrB,MAAO,CACHN,kBAAmBM,EAAMK,KAAKC,SAIvBF,CAAyBL,G,mDC7BzBQ,EAjBI,SAAA1C,GAGf,IAAMC,EAAM,CAACC,IAAQwC,YAKrB,OAJI1C,EAAMmC,OACNlC,EAAIG,KAAKF,IAAQF,EAAMmC,QAIvB,wBACA3B,UAAWP,EAAIQ,KAAK,KACpBH,QAAS,kBAAKN,EAAM2C,cAAc3C,EAAM4C,OAAOC,MAC1C7C,EAAM4C,OAAOE,OCcXC,EAzBI,SAAA/C,GAGf,OACI,wBAAIQ,UAAWN,IAAQ6C,YAEf/C,EAAMgD,QAAQ/B,KAAI,SAAC2B,EAAQzB,GAEvB,OACI,kBAAC,EAAD,CACAwB,cAAiB3C,EAAM2C,cACvBvB,IAAMD,EACNyB,OAAUA,EACVT,MAASnC,EAAMmC,MAAQnC,EAAMmC,MAAMS,EAAOC,IAAM,YCSzDI,EAtBI,SAAAjD,GAGf,OACI,yBAAKQ,UAAWN,IAAQ+C,YACpB,uBAAGzC,UAAWN,IAAQgD,UAClB,8BACI,gCAASlD,EAAMmD,aAAf,KADJ,OAEKnD,EAAMoD,UAEX,+BAAQpD,EAAMmD,aAAd,iBAAgCnD,EAAMqD,aAG9C,kBAAC,EAAD,CACIV,cAAgB3C,EAAM2C,cACtBK,QAAShD,EAAMgD,QACfb,MAASnC,EAAMmC,U,kCCCZmB,EAlBA,SAACtD,GAEZ,IAAMC,EAAM,CACRC,IAAQoD,OACRpD,IAAQF,EAAMuD,OAGlB,OACI,4BACIjD,QAASN,EAAMM,QACfE,UAAWP,EAAIQ,KAAK,KACpB+C,SAAUxD,EAAMwD,UAEdxD,EAAMsC,WC8CLmB,EArDM,SAAAzD,GACjB,IAAM0D,EAAeC,OAAOC,KAAK5D,EAAM6D,SAASC,QAAO,SAACC,EAAQ3C,GAI5D,MAH2B,YAAvBpB,EAAM6D,QAAQzC,IACb2C,IAEEA,IACR,GAEH,OACI,yBAAKvD,UAAWN,IAAQuD,cACpB,4BAEAzD,EAAMgE,KAAK/C,KAAI,SAACgD,EAAU9C,GACtB,IAAM+C,EAAsC,YAA/BlE,EAAM6D,QAAQI,EAASpB,IAClC,kBAAC,IAAD,CAAiBrC,UAAWN,IAAQiE,QAASC,MAAO,CAACC,WAAY,IAAK3D,KAAM4D,MAC5E,kBAAC,IAAD,CAAiB9D,UAAWN,IAAQqE,MAAOH,MAAO,CAACC,WAAY,IAAK3D,KAAMC,MAEhF,OACI,wBAAIS,IAAKD,GACL,gCAASA,EAAQ,EAAjB,KADJ,OAEK8C,EAASb,SACTc,MAmBT,qFAAcR,EAAd,iBAAgC1D,EAAMgE,KAAKQ,QAE3C,6BACI,kBAAC,EAAD,CAAQlE,QAASN,EAAMyE,MAAOlB,KAAK,WAAnC,0DACA,kBAAC,IAAD,CAAMlC,GAAG,KACL,kBAAC,EAAD,CAAQf,QAASN,EAAMyE,MAAOlB,KAAK,WAAnC,oI,iBCzCLmB,EAVA,SAAC1E,GAAD,OAEX,yBAAKQ,UAAWN,IAAQyE,QACpB,yBAAKnE,UAAWN,IAAQwE,QACpB,8BAAM,iC,oECoCX,SAASE,GAAmBC,GAC/B,MAAO,CACHtB,KC5C4B,uBD6C5BsB,UAGD,SAASC,GAAiBC,GAC7B,MAAO,CACHxB,KCjD0B,qBDkD1BgB,MAAOQ,GAuBR,SAASC,GAAiBhB,GAC7B,MAAO,CACHT,KC1E0B,qBD2E1BS,QAKD,SAASiB,GAAgBC,GAC5B,OAAO,SAACC,EAAUC,GAUd,IAAMjD,EAAQiD,IAAWpB,KAEzB,GAAG7B,EAAMkD,YAAa,CAClB,IAAMjE,EAAMuC,OAAOC,KAAKzB,EAAMkD,aAC9B,GAA8B,YAA3BlD,EAAMkD,YAAYjE,GACjB,OAIR,IAAMgC,EAAWjB,EAAM6B,KAAK7B,EAAMmD,gBAC5BzB,EAAU1B,EAAM0B,QAEtB,GAAGT,EAASmC,cAAgBL,EAAU,CAC9BrB,EAAQT,EAASP,MACjBgB,EAAQT,EAASP,IAAM,WAG3BsC,EAASK,GAAa,eAAEN,EAAW,WAAYrB,IAO/C,IAAM4B,EAAUC,OAAOC,YAAW,YAoD9C,SAAyBxD,GACrB,OAAOA,EAAMmD,eAAiB,IAAMnD,EAAM6B,KAAKQ,OApD/BoB,CAAezD,GAQfgD,EAqCT,CACH5B,KC/J0B,qBDgK1B+B,eAvCsCnD,EAAMmD,eAAiB,IAPjDH,EAsCT,CACH5B,KC1JmB,gBDgIXmC,OAAOG,aAAaJ,KACrB,UAGH5B,EAAQT,EAASP,IAAM,QAEvBsC,EAASK,GAAa,eAAEN,EAAW,SAAUrB,KAUlD,SAAS2B,GAAaH,EAAaxB,GACtC,MAAO,CACHN,KCnJsB,iBDoJtB8B,cACAxB,W,IEhJFiC,G,kLAsGElE,KAAK5B,MAAM+F,cAAcnE,KAAK5B,MAAMgG,MAAMC,OAAOpD,M,6CAKjDjB,KAAK5B,MAAMkG,c,+BAyBX,OACI,yBAAK1F,UAAWN,IAAQ4F,MACpB,yBAAKtF,UAAWN,IAAQiG,aACxB,wIAGIvE,KAAK5B,MAAMoG,UAAYxE,KAAK5B,MAAMgE,KAC5B,kBAAC,EAAD,MACApC,KAAK5B,MAAMqG,WACH,kBAAC,EAAD,CACM5B,MAAS7C,KAAK5B,MAAMkG,UACpBrC,QAASjC,KAAK5B,MAAM6D,QACpBG,KAAMpC,KAAK5B,MAAMgE,OAEvB,kBAAC,EAAD,CACMZ,SAAYxB,KAAK5B,MAAMgE,KAAKpC,KAAK5B,MAAMsF,gBAAgBlC,SACvDJ,QAAWpB,KAAK5B,MAAMgE,KAAKpC,KAAK5B,MAAMsF,gBAAgBtC,QAEtDL,cAAiBf,KAAK5B,MAAMiF,gBAC5B5B,WAAczB,KAAK5B,MAAMgE,KAAKQ,OAC9BrB,aAAgBvB,KAAK5B,MAAMsF,eAAiB,EAC5CnD,MAASP,KAAK5B,MAAMqF,oB,GAzJzCpD,aAuLJM,oBAnBf,SAAyBJ,GACrB,MAAO,CACH0B,QAAS1B,EAAM6B,KAAKH,QACpBwC,WAAYlE,EAAM6B,KAAKqC,WACvBf,eAAgBnD,EAAM6B,KAAKsB,eAC3BD,YAAalD,EAAM6B,KAAKqB,YACxBrB,KAAM7B,EAAM6B,KAAKA,KACjBoC,QAASjE,EAAM6B,KAAKoC,YAI5B,SAA4BjB,GACxB,MAAO,CACHY,cAAe,SAAAlD,GAAE,OAAIsC,GF/HCmB,EE+HsBzD,EF9HhD,uCAAO,WAAMsC,GAAN,iBAAAoB,EAAA,6DACHpB,EAtBG,CACH5B,KCxC0B,uBD4DvB,kBAIwBiD,KAAMC,IAAN,yDAA4DH,EAA5D,UAJxB,OAIOI,EAJP,OAKO1C,EAAO0C,EAASC,KAEtBxB,EAASH,GAAiBhB,IAP3B,gDAUCmB,EAASL,GAAiB,EAAD,KAV1B,yDAAP,wDADG,IAAuBwB,GEgItBrB,gBAAiB,SAAAC,GAAQ,OAAIC,EAASF,GAAgBC,KACtDgB,UAAW,kBAAMf,EFZd,CACH5B,KC1KkB,mBCyLXhB,CAA4CuD,I,oBCxLpDc,G,2KAQC,OAAOhF,KAAK5B,MAAM6E,OAAO5D,KAAI,SAAC+C,EAAM7C,GAChC,OACI,wBAAIC,IAAKD,GACL,kBAAC,IAAD,CACIE,GAAI,SAAW2C,EAAKnB,IACtBmB,EAAK6C,Y,0CASpBjF,KAAK5B,MAAM8G,gB,+BA2BV,OACI,yBAAKtG,UAAWN,KAAQ0G,UAEpB,6BACI,yGAGIhF,KAAK5B,MAAMoG,SAAwC,IAA7BxE,KAAK5B,MAAM6E,OAAOL,OAClC,kBAAC,EAAD,MACA,4BAAK5C,KAAKmF,oB,GA1DhB9E,aAgFTM,oBAbf,SAAyBJ,GACrB,MAAO,CACH0C,OAAQ1C,EAAM6B,KAAKa,OACnBuB,QAASjE,EAAM6B,KAAKoC,YAI5B,SAA4BjB,GACxB,MAAO,CACH2B,YAAa,kBAAM3B,EHtEvB,uCAAO,WAAMA,GAAN,iBAAAoB,EAAA,6DACHpB,EAwBG,CACH5B,KCxC0B,uBDcvB,kBAGwBiD,KAAMC,IAAI,uDAHlC,OAGOC,EAHP,OAMO7B,EAAS,GAGflB,OAAOC,KAAK8C,EAASC,MAAM1F,KAAI,SAACG,EAAKD,GACjC0D,EAAOzE,KAAK,CACRyC,GAAIzB,EACJyF,KAAK,4BAAD,OAAU1F,EAAQ,QAIhCgE,EAASP,GAAmBC,IAhB3B,kDAmBCM,EAASL,GAAiB,EAAD,KAnB1B,0DAAP,2DG0EWvC,CAA6CqE,I,4BCxFrD,SAASI,GAAeC,EAAQC,GACnC,OAAO,gBACAD,EADP,CAEIC,aACAC,OAAQD,EACRE,SAAS,EACTC,MAAO,KAWR,SAASC,GAASD,GAA2B,IAApBH,EAAmB,uDAAN,KACzC,IAAIA,EACA,OAAO,EAGX,IAAIK,GAAU,EAMd,OAJGL,EAAWM,WACVD,EAA2B,KAAjBF,EAAMI,QAAiBF,GAG9BA,EAGJ,SAASG,GAAaC,GACzB,IAAIC,GAAc,EAElB,IAAK,IAAIC,KAAWF,EACbA,EAAaG,eAAeD,KAC3BD,EAAcD,EAAaE,GAASV,OAASS,GAIrD,OAAOA,E,wBCTIG,GA5BD,SAAA/H,GAEV,IAAMgI,EAAYhI,EAAMuD,MAAQ,OAC1BtD,EAAM,CAACC,KAAQ6H,OACfE,EAAO,UAAMD,EAAN,cAAqBE,KAAKC,UAEvC,OACI,yBAAK3H,UAAWP,EAAIQ,KAAK,MACrB,2BAAOwH,QAASA,GAAUjI,EAAMyB,OAChC,2BACIoB,GAAIoF,EACJZ,MAAOrH,EAAMqH,MACb9D,KAAMyE,EACNI,SAAUpI,EAAMoI,WAIhBpI,EAAMqI,aACJ,8BAAOrI,EAAMqI,cACb,O,oBCaHC,GAhCA,SAACtI,GAEZ,IAAMiI,EAAO,UAAMjI,EAAMyB,MAAZ,cAAuByG,KAAKC,UACzC,OACI,yBAAK3H,UAAWN,KAAQoI,QACpB,2BACIL,QAASA,GAEJjI,EAAMyB,OAIf,4BACI4F,MAAOrH,EAAMqH,MACbe,SAAUpI,EAAMoI,SAChBvF,GAAIoF,GAECjI,EAAMuI,QAAQtH,KAAI,SAACuH,EAAQrH,GACxB,OACA,4BACIC,IAAKD,EACLkG,MAAOmB,EAAOnB,OAEbmB,EAAO1F,YChBpC,SAAS2F,GAAoBC,GACzB,OAAO1B,GACH,CACAvF,MAAM,8CAAD,OAAaiH,GAClBL,aAAc,GACdxF,GAAI6F,GAEJ,CAAClB,UAAU,IAGnB,SAASmB,KACL,MAAO,CACHvF,SAAU4D,GACN,CACAvF,MAAO,kFACP4G,aAAc,IAGd,CAACb,UAAU,IACfoB,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,GAC7BM,QAASN,GAAoB,I,IAW/BO,G,4MAEF7G,MAAO,CAEHyF,aAAa,EACbqB,cAAe,EACftB,aAAcgB,M,EA4BlBO,mBAAqB,SAACC,GAClBA,EAAMC,iBAKN,IAAMC,EAAgB,CAClBjG,SAAU,EAAKjB,MAAMwF,aAAavE,SAASiE,MAC3CxE,GAAI,EAAK7C,MAAMwE,OAAS,EACxBe,YAAa,EAAKpD,MAAM8G,cACxBjG,QAAS,CACL,CAACF,KAAM,EAAKX,MAAMwF,aAAaiB,QAAQvB,MACvCxE,GAAI,EAAKV,MAAMwF,aAAaiB,QAAQ/F,IAEpC,CAACC,KAAM,EAAKX,MAAMwF,aAAakB,QAAQxB,MACvCxE,GAAI,EAAKV,MAAMwF,aAAakB,QAAQhG,IAEpC,CAACC,KAAM,EAAKX,MAAMwF,aAAamB,QAAQzB,MACvCxE,GAAI,EAAKV,MAAMwF,aAAamB,QAAQjG,IAEpC,CAACC,KAAM,EAAKX,MAAMwF,aAAaoB,QAAQ1B,MACvCxE,GAAI,EAAKV,MAAMwF,aAAaoB,QAAQlG,MAO5C,EAAK7C,MAAMsJ,mBAAmBD,GAE9B,EAAKhH,SAAS,CAEVuF,aAAa,EACbqB,cAAe,EACftB,aAAcgB,Q,EAKtBY,kB,uCAAoB,WAAMJ,GAAN,SAAA5C,EAAA,sDAChB4C,EAAMC,iBAEN,EAAKpJ,MAAMwJ,mBAEX,EAAKnH,SAAS,CACVuF,aAAa,EACbqB,cAAe,EACftB,aAAcgB,OARF,2C,wDA2BpBc,cAAgB,SAACpC,EAAQqC,GACrB,IAAM/B,EAAY,gBAAQ,EAAKxF,MAAMwF,cAC/BgC,EAAS,gBAAQhC,EAAa+B,IAEpCC,EAAUvC,SAAU,EACpBuC,EAAUtC,MAAQA,EAClBsC,EAAUxC,MAAQG,GAASqC,EAAUtC,MAAOsC,EAAUzC,YAKlDyC,EAAUtB,aADXqB,GAAyB,KAAVrC,EACW,GAGA,6JAK7BM,EAAa+B,GAAeC,EAE5B,EAAKtH,SAAS,CACVsF,eACAC,YAAaF,GAAaC,M,EAKlCiC,eAAiB,WACb,OAAOjG,OAAOC,KAAK,EAAKzB,MAAMwF,cAAc1G,KAAI,SAACyI,EAAavI,GAC1D,IAAM0G,EAAU,EAAK1F,MAAMwF,aAAa+B,GACxC,OACI,kBAAC,IAAM3H,SAAP,CAAgBX,IAAKD,GACrB,kBAAC,GAAD,CACIM,MAAOoG,EAAQpG,MACf4F,MAAOQ,EAAQR,MAIfgB,aAAcR,EAAQQ,aACtBD,SAAU,SAAAe,GAAK,OAAI,EAAKM,cAAcN,EAAMU,OAAOxC,MAAOqC,MAGnD,IAAVvI,EAAc,6BAAQ,U,EAUnC2I,oBAAuB,SAAAX,GACnB,EAAK9G,SAAS,CACV4G,eAAgBE,EAAMU,OAAOxC,S,4DA7HvB8B,GACVA,EAAMC,mB,+BAkIV,IAAMW,EAAS,kBAAC,GAAD,CACXtI,MAAM,+IACN4F,MAAOzF,KAAKO,MAAM8G,cAClBb,SAAUxG,KAAKkI,oBACfvB,QAAU,CACN,CAACzF,KAAM,EAAGuE,MAAO,GACjB,CAACvE,KAAM,EAAGuE,MAAO,GACjB,CAACvE,KAAM,EAAGuE,MAAO,GACjB,CAACvE,KAAM,EAAGuE,MAAO,MAIrB,OACI,yBAAK7G,UAAWN,KAAQ8I,aACpB,6BACI,mGAEA,0BAAMgB,SAAUpI,KAAKqI,eAEpBrI,KAAKgI,iBAELG,EAED,kBAAC,EAAD,CACIxG,KAAK,UACLjD,QAASsB,KAAKsH,mBACd1F,UAAW5B,KAAKO,MAAMyF,aAH1B,yFAQA,kBAAC,EAAD,CACIrE,KAAK,UACLjD,QAASsB,KAAK2H,kBACd/F,SAAqC,IAA3B5B,KAAK5B,MAAMgE,KAAKQ,QAH9B,8E,GAhMMvC,aA4NXM,oBAbf,SAAyBJ,GACrB,MAAO,CACH6B,KAAM7B,EAAM+H,OAAOlG,SAI3B,SAA4BmB,GACxB,MAAO,CACHmE,mBAAoB,SAAAlG,GAAQ,OAAI+B,EC/PjC,SAA4B/B,GAC/B,MAAO,CACHG,KPG4B,uBOF5BH,YD4PyCkG,CAAmBlG,KAC5DoG,iBAAkB,kBAAMrE,EClP5B,uCAAO,WAAOA,EAAUC,GAAjB,SAAAmB,EAAA,sEACGC,KAAM2D,KAAK,sDAAuD/E,IAAW8E,OAAOlG,MADvF,OAGHmB,EATG,CACH5B,KPH2B,wBOQxB,2CAAP,6DDsPWhB,CAA6CyG,I,oBEnOrD,SAASoB,GAAY3H,GACxB,MAAO,CACHc,KR5BoB,eQ6BpBd,SAID,SAAS4H,GAAWC,GACvB,OAAO,SAAAC,GACH5E,YAAW,WACP4E,EAAQC,QACF,IAAPF,IAIJ,SAASE,KAKZ,OAJAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBAEjB,CACHnH,KR9CmB,eSF3B,SAASoH,GAAcC,GAGnB,MADS,0JACCC,KAAKC,OAAOF,GAAOG,e,IAG3BC,G,4MAEF7I,MAAQ,CACJ8I,aAAa,EACbtD,aAAc,CACNiD,MAAO,CACHvD,MAAO,GACP9D,KAAM,IACN8E,aAAc,GACd5G,MAAO,QACP0F,OAAO,GAEX+D,SAAU,CACN7D,MAAO,GACP9D,KAAM,WACN8E,aAAc,GACd5G,MAAO,uCACP0F,OAAO,K,EAMvBgE,aAAe,WACX,EAAKnL,MAAMwC,KACP,EAAKL,MAAMwF,aAAaiD,MAAMvD,MAC9B,EAAKlF,MAAMwF,aAAauD,SAAS7D,OACjC,I,EAiBR+D,gBAAkB,WACd,EAAKpL,MAAMwC,KACP,EAAKL,MAAMwF,aAAaiD,MAAMvD,MAC9B,EAAKlF,MAAMwF,aAAauD,SAAS7D,OACjC,I,EAsBRe,SAAW,SAACe,EAAOkC,GACf,IAAMC,EAAanC,EAAMU,OAAOxC,MAAMI,OAEhCE,EAAY,gBAAQ,EAAKxF,MAAMwF,cAC/BgC,EAAS,gBAAQhC,EAAa0D,IAEpC1B,EAAUtC,MAAQiE,EAEA,UAAdD,IACIV,GAAcW,IACd3B,EAAUtB,aAAe,GACzBsB,EAAUxC,OAAQ,IAElBwC,EAAUtB,aAAV,0FAA2CgD,GAC3C1B,EAAUxC,OAAQ,IAIR,aAAdkE,IACIE,OAAOD,IAAeA,EAAW9G,OAAS,GAC1CmF,EAAUtB,aAAe,GACzBsB,EAAUxC,OAAQ,IAElBwC,EAAUtB,aAAV,0FAA2CgD,GAC3C1B,EAAUxC,OAAQ,IAI1BQ,EAAa0D,GAAa1B,EAE1B,IAAIsB,GAAc,EAGlBtH,OAAOC,KAAK+D,GAAc1G,KAAI,SAAA4F,GAC1BoE,EAActD,EAAad,GAAMM,OAAS8D,KAG9C,EAAK5I,SAAS,CACV4I,cAAatD,kB,4DA1CPwB,GACVA,EAAMC,mB,qCA8CO,IAAD,OACZ,OAAOzF,OAAOC,KAAKhC,KAAKO,MAAMwF,cAAc1G,KAAI,SAACoK,EAAWjK,GACxD,IAAMoK,EAAQ,EAAKrJ,MAAMwF,aAAa0D,GAEtC,OACI,kBAAC,GAAD,CACIjK,IAAKA,EACLK,MAAO+J,EAAM/J,MACb8B,KAAMiI,EAAMjI,KACZ8D,MAAOmE,EAAMnE,MACbgB,aAAcmD,EAAMnD,aACpBD,SAAU,SAAAe,GAAK,OAAI,EAAKf,SAASe,EAAOkC,W,+BAOpD,OACI,yBAAK7K,UAAWN,KAAQ8K,MAEpB,6BACI,kGAEA,0BAAMhB,SAAUpI,KAAKqI,cAAezJ,UAAWN,KAAQuL,UAElD7J,KAAK8J,eAEN,kBAAC,EAAD,CACInI,KAAK,UACLjD,QAASsB,KAAKuJ,aACd3H,UAAW5B,KAAKO,MAAM8I,aAH1B,kCAQA,kBAAC,EAAD,CACI1H,KAAK,UACLjD,QAASsB,KAAKwJ,gBACd5H,UAAW5B,KAAKO,MAAM8I,aAH1B,uH,GArJLhJ,aA0KJM,mBAAQ,MANvB,SAA4B4C,GACxB,MAAO,CACH3C,KAAM,SAACoI,EAAOM,EAAUS,GAAlB,OAA8BxG,EDlLrC,SAAcyF,EAAOM,EAAUS,GACnC,8CAAO,WAAMpB,GAAN,uBAAAhE,EAAA,6DACIqF,EAAU,CACZhB,QACAM,WACAW,mBAAmB,GAGnBC,EAAM,wGAENH,IACAG,EAAM,qHAVR,SAaqBtF,KAAM2D,KAAK2B,EAAKF,GAbrC,OAaIlF,EAbJ,OAcIC,EAAOD,EAASC,KAEtBjF,QAAQC,IAAIgF,GAENoF,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAA6B,IAAjBtF,EAAKuF,WAC5DxK,QAAQC,IAAI,mBAAoBoK,GAEhCtB,aAAa0B,QAAQ,QAASxF,EAAKyF,SACnC3B,aAAa0B,QAAQ,SAAUxF,EAAK0F,SACpC5B,aAAa0B,QAAQ,iBAAkBJ,GAEvCxB,EAAQH,GAAYzD,EAAKyF,UAEzB7B,EAAQF,GAAW1D,EAAKuF,YA3BtB,4CAAP,sDCiLkD1J,CAAKoI,EAAOM,EAAUS,QAI5DpJ,CAAkCyI,ICpL3CsB,G,kLAGE1K,KAAK5B,MAAMwK,W,+BAIX,OACI,kBAAC,IAAD,CAAUnJ,GAAI,U,GARLY,aAmBNM,mBAAQ,MANvB,SAA4B4C,GACxB,MAAO,CACHqF,OAAQ,kBAAMrF,EAASqF,UAIhBjI,CAAkC+J,ICZ3CC,G,kLAGF3K,KAAK5B,MAAMwM,c,+BAMX,IAAIC,EACF,kBAAC,IAAD,KACM,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAW3B,KAC/B,kBAAC,IAAD,CAAO0B,KAAK,gBAAgBC,UAAW3D,KACvC,kBAAC,IAAD,CAAO0D,KAAK,YAAYC,UAAW7G,KACnC,kBAAC,IAAD,CAAO4G,KAAK,IAAIpL,OAAK,EAACqL,UAAW/F,KACjC,kBAAC,IAAD,CAAUvF,GAAG,OAgBrB,OAZIO,KAAK5B,MAAM6B,kBACb4K,EACE,kBAAC,IAAD,KACM,kBAAC,IAAD,CAAOC,KAAK,gBAAgBC,UAAW3D,KACvC,kBAAC,IAAD,CAAO0D,KAAK,YAAYC,UAAW7G,KACnC,kBAAC,IAAD,CAAO4G,KAAK,UAAUC,UAAWL,KACjC,kBAAC,IAAD,CAAOI,KAAK,IAAIpL,OAAK,EAACqL,UAAW/F,KACjC,kBAAC,IAAD,CAAUvF,GAAG,QAMnB,kBAAC,EAAD,KACGoL,O,GAjCOxK,aAoDH2K,mBAAWrK,aAZ1B,SAAyBJ,GACvB,MAAO,CACLN,kBAAmBM,EAAMK,KAAKC,UAIlC,SAA4B0C,GAC1B,MAAO,CACLqH,UAAW,kBAAMrH,GHEV,SAAAoF,GACH,IAAM9H,EAAQgI,aAAaoC,QAAQ,SACnC,GAAIpK,EAEG,CACH,IAAMsJ,EAAiB,IAAIC,KAAKvB,aAAaoC,QAAQ,mBACjDd,GAAkB,IAAIC,KACtBzB,EAAQC,OAERD,EAAQH,GAAY3H,IAEpB8H,EAAQF,IAAY0B,EAAeE,WAAY,IAAID,MAAOC,WAAa,YAR3E1B,EAAQC,aGDMjI,CAA4CgK,KCpDlDO,QACW,cAA7BpH,OAAOqH,SAASC,UAEe,UAA7BtH,OAAOqH,SAASC,UAEhBtH,OAAOqH,SAASC,SAAShH,MACvB,2D,aCNAiH,GAAe,CACjBpI,OAAQ,GACRuB,SAAS,EACT7B,MAAO,KAEPV,QAAS,GACTwC,YAAY,EACZf,eAAgB,EAChBD,YAAa,KAEbrB,KAAM,M,aCpBJiJ,GAAe,CACjBjJ,KAAM,ICDV,IAAIiJ,GAAe,CACfxK,OAAO,GCGIyK,kCAAgB,CAC3BlJ,KHkBW,WAAoD,IAA/B7B,EAA8B,uDAAtB8K,GAAcE,EAAQ,uCAC9D,OAAQA,EAAO5J,MACX,Ib3B0B,qBa4BtB,OAAO,gBACApB,EADP,CACciE,SAAS,IAE3B,Ib9B4B,uBa+BxB,OAAO,gBACAjE,EADP,CACciE,SAAS,EAAOvB,OAAQsI,EAAOtI,SAEjD,IbjC0B,qBakCtB,OAAO,gBACA1C,EADP,CACciE,SAAS,EAAO7B,MAAO4I,EAAO5I,QAEhD,IbpC0B,qBaqCtB,OAAO,gBACApC,EADP,CACciE,SAAS,EAAOpC,KAAMmJ,EAAOnJ,OAE/C,IbvCsB,iBawClB,OAAO,gBACA7B,EADP,CACckD,YAAa8H,EAAO9H,YAAaxB,QAASsJ,EAAOtJ,UAEnE,Ib1CmB,ca2Cf,OAAO,gBACA1B,EADP,CACckE,YAAY,IAE9B,Ib7C0B,qBa8CtB,OAAO,gBACAlE,EADP,CACckD,YAAa,KAAMC,eAAgB6H,EAAO7H,iBAE5D,IbhDkB,aaiDd,OAAO,gBACAnD,EADP,CAEI0B,QAAS,GACTwC,YAAY,EACZf,eAAgB,EAChBD,YAAa,OAErB,QACI,OAAOlD,IGxDf+H,OFFW,WAAsD,IAA/B/H,EAA8B,uDAAtB8K,GAAcE,EAAQ,uCACjE,OAAQA,EAAO5J,MACX,IdA6B,uBcCzB,OAAO,gBACApB,EADP,CAEI6B,KAAK,GAAD,oBAAM7B,EAAM6B,MAAZ,CAAkBmJ,EAAO/J,aAEpC,IdJ2B,sBcKvB,OAAO,gBACAjB,EADP,CAEI6B,KAAM,KAEhB,QACC,OAAO7B,IEVVK,KDHW,WAAoD,IAA/BL,EAA8B,uDAAtB8K,GAAcE,EAAQ,uCAC9D,OAAQA,EAAO5J,MACX,IfEoB,eeDhB,OAAO,gBACApB,EADP,CACcM,MAAO0K,EAAO1K,QAEhC,IfDmB,ceEf,OAAO,gBACAN,EADP,CACcM,MAAO,OAEzB,QACI,OAAON,M,kBECbiL,GAAQC,uBACZH,GACAI,+BACEC,2BAAgBC,QAIpBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,IAAD,KACI,kBAAC,GAAD,SAIRQ,SAASC,eAAe,SLkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7J,GACL7C,QAAQ6C,MAAMA,EAAM8J,c","file":"static/js/main.8a448fc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__32QnB\",\"close\":\"Drawer_close__2Z-Ay\",\"active\":\"Drawer_active__2oJCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__30keh\",\"fack\":\"FinishedQuiz_fack__3SS46\",\"error\":\"FinishedQuiz_error__2Uh9s\",\"success\":\"FinishedQuiz_success__2kPt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2nqJO\",\"open\":\"MenuToggle_open__14len\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__RAGpO\",\"Question\":\"ActiveQuiz_Question__3y8RS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__rAo7u\",\"success\":\"AnswerItem_success__qc5CR\",\"error\":\"AnswerItem_error__1V531\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ViIb\",\"error\":\"Button_error__u4DQM\",\"success\":\"Button_success__2xjYG\",\"primary\":\"Button_primary__2kiGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Louder\":\"Louder_Louder__3hA5p\",\"lds-ripple\":\"Louder_lds-ripple__9yzEI\",\"Louderdiv\":\"Louder_Louderdiv__SRc0e\",\"Center\":\"Louder_Center__HzrgD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1DKhm\",\"QuizWrapper\":\"Quiz_QuizWrapper__25zas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7E_6I\",\"AuthForm\":\"Auth_AuthForm__1SsQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__OSvyn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrops\":\"BackDrops_BackDrops__1QBp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerList\":\"AnswerList_AnswerList__1WMTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QiuzList\":\"QiuzList_QiuzList__3QPto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__1Doiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1aqBu\",\"invalid\":\"Input_invalid__3DmDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1Tw55\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nconst MenuToggle = props => {\r\n\r\n    const cls = [\r\n        classes.MenuToggle,\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push(classes.open)\r\n    }\r\n\r\n    return (\r\n                <FontAwesomeIcon \r\n                onClick={props.onToggle} \r\n                className={cls.join(' ')} \r\n                icon={props.isOpen ? faTimes : faBars}\r\n                />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react';\r\nimport classes from './BackDrops.module.css';\r\n\r\nexport default (props) => <div className={classes.BackDrops} onClick={props.dropsHandlerClose}></div>","import React, { Component } from 'react';\r\nimport classes from './Drawer.module.css';\r\nimport BackDrops from '../../UI/BackDrops/BackDrops';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// const links = [\r\n//     {\r\n//         to: '/',\r\n//         label: 'Список',\r\n//         exact: true\r\n//     },\r\n//     {\r\n//         to: '/auth',\r\n//         label: 'Авторизация',\r\n//         exact: false\r\n//     },\r\n//     {\r\n//         to: '/quiz-creator',\r\n//         label: 'Создать тест',\r\n//         exact: false\r\n//     }\r\n\r\n// ]\r\n\r\nclass Drawer extends Component {\r\n\r\n    renderLinks(links) {\r\n        return links.map((link, index) => {\r\n            return (\r\n            <li key={index}>\r\n                <NavLink\r\n                    to={link.to}\r\n                    exact={link.exact}\r\n                    activeClassName={classes.active}\r\n                    onClick={this.props.dropsHandlerClose}\r\n                >{link.label}\r\n                </NavLink>\r\n            </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render () {\r\n\r\n        console.log('auth', this.props.isAuthenticated )\r\n\r\n        let links =  [\r\n            {to: '/', label: 'Список', exact: true}\r\n        ]\r\n\r\n        if (this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false},\r\n                        {to: '/logout', label: 'Выйти', exact: false})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n        }\r\n\r\n        const cls = [classes.Drawer]\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    {this.renderLinks(links)}\r\n                </ul>\r\n            </nav>\r\n            {this.props.isOpen \r\n            ? <BackDrops  dropsHandlerClose={this.props.dropsHandlerClose} />\r\n            : null\r\n            }\r\n            </React.Fragment>\r\n            )\r\n    }\r\n        \r\n}\r\n\r\nexport default Drawer","import React, { Component } from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menuOpen: false\r\n    }\r\n\r\n    onToggle = ()=> {\r\n        this.setState({ menuOpen: !this.state.menuOpen})\r\n    }\r\n\r\n    dropsHandlerClose = ()=> {\r\n        this.setState({ menuOpen: false})\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.Layout}>\r\n                <Drawer \r\n                isOpen={this.state.menuOpen}\r\n                dropsHandlerClose = {this.dropsHandlerClose}\r\n                isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n\r\n                <MenuToggle \r\n                isOpen={this.state.menuOpen}\r\n                onToggle={this.onToggle}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from 'react';\r\nimport classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n    // console.log('cls.push(classes.props.st: ', props.state)\r\n    const cls = [classes.AnswerItem]\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n    \r\n    return (\r\n        <li \r\n        className={cls.join(' ')} \r\n        onClick={()=> props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}    \r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswerList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswerList = props => {\r\n    // console.log(props.state);\r\n  \r\n    return ( \r\n        <ul className={classes.AnswerList}>\r\n            {\r\n                props.answers.map((answer, index) => {\r\n                    \r\n                    return (\r\n                        <AnswerItem \r\n                        onAnswerClick = {props.onAnswerClick}\r\n                        key ={index}\r\n                        answer = {answer}\r\n                        state = {props.state ? props.state[answer.id] : null}\r\n                        // state = {props.state ? props.state : null}\r\n\r\n                        >\r\n                        </AnswerItem>\r\n                    )\r\n                }) \r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswerList\r\n","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css';  \r\nimport AnswerList from './AnswerList/AnswerList'\r\n\r\nconst ActiveQuiz = props => {\r\n    // console.log(props.state);\r\n    \r\n    return ( \r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n\r\n        <AnswerList \r\n            onAnswerClick= {props.onAnswerClick}\r\n            answers={props.answers}\r\n            state = {props.state}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveQuiz","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button \r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            { props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport classes from './FinishedQuiz.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Button from '../UI/Button/Button';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.resalts).reduce((tottal, key) => {\r\n        if (props.resalts[key] === 'success') {\r\n             tottal++\r\n        }\r\n        return tottal\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n            { \r\n            props.quiz.map((quizItem, index) => {\r\n                const cls1 = props.resalts[quizItem.id] === 'success' \r\n                ? <FontAwesomeIcon className={classes.success} style={{marginLeft: 10}} icon={faCheck} />\r\n                : <FontAwesomeIcon className={classes.error} style={{marginLeft: 10}} icon={faTimes} />\r\n                \r\n            return (\r\n                <li key={index}>\r\n                    <strong>{index + 1}.</strong>&nbsp;\r\n                    {quizItem.question}\r\n                    {cls1}\r\n                </li>\r\n                )                \r\n            })\r\n            }\r\n\r\n\r\n                {/* <li>\r\n                    <strong>1. </strong>\r\n                    How are you?\r\n                    <FontAwesomeIcon className={classes.error} style={{marginLeft: 10}} icon={faTimes}  />\r\n                    {/* <i className={'fa fa-times' + classes.error} > </i> */}\r\n                {/* </li>\r\n                <li>\r\n                    <strong>1. </strong>\r\n                    How are you?\r\n                    <FontAwesomeIcon className={classes.success} style={{marginLeft: 10}} icon={faCheck}/>\r\n                </li> */}\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n            \r\n            <div>\r\n                <Button onClick={props.retry} type=\"primary\">Повторить</Button>\r\n                <Link to='/'>\r\n                    <Button onClick={props.retry} type=\"success\">Перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react';\r\nimport classes from './Louder.module.css';\r\n\r\nconst Louder = (props) => (\r\n\r\n    <div className={classes.Center}>\r\n        <div className={classes.Louder}>\r\n            <div/><div/>\r\n        </div>\r\n    </div>\r\n    \r\n)\r\n\r\nexport default Louder","import axios from 'axios'\r\nimport { \r\n    fetch_Quizes_Error, \r\n    fetch_Quizes_Start, \r\n    fetch_Quizes_Success, \r\n    fetch_Quiz_Success, \r\n    quiz_Set_State,\r\n    finish_Quiz,\r\n    quiz_Next_Question,\r\n    retry_Quiz\r\n} from './actionsTypes'\r\n\r\n//actionCreator for QuizList(COMPONENT) in fetchQuizes()\r\nexport function fetchQuizes() { \r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get('https://react-quiz-6002a.firebaseio.com/quizes.json')\r\n            // console.log(response.data)\r\n            \r\n            const quizes = []\r\n                \r\n            // eslint-disable-next-line\r\n            Object.keys(response.data).map((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест ${index + 1}`\r\n                })\r\n            })\r\n\r\n          dispatch(fetchQuizesSuccess(quizes))\r\n\r\n        } catch (err) {\r\n            dispatch(fetchQuizesError(err))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {  //actionCreator for QuizList in fetchQuizes()\r\n    return {\r\n        type: fetch_Quizes_Start,\r\n    }\r\n}\r\nexport function fetchQuizesSuccess(quizes) { //actionCreator for QuizList fetchQuizes()\r\n    return {\r\n        type: fetch_Quizes_Success,\r\n        quizes\r\n    }\r\n}\r\nexport function fetchQuizesError(err) { //actionCreator for QuizList fetchQuizes()\r\n    return {    \r\n        type: fetch_Quizes_Error,\r\n        error: err\r\n    }\r\n}\r\n\r\n\r\n\r\n //actionCreator for Quiz(COMPONENT) in fetchQuizById(id)\r\nexport function fetchQuizById(quizId) { \r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())  //используем этот метод,уже изменяет в reducer loading на true\r\n        \r\n        try {\r\n            const response = await axios.get(`https://react-quiz-6002a.firebaseio.com/quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n            \r\n            dispatch(fetchQuizSuccess(quiz))\r\n\r\n        } catch (err) {\r\n            dispatch(fetchQuizesError(err))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) { //actionCreator for fetchQuizById(id)\r\n    return {\r\n        type: fetch_Quiz_Success,\r\n        quiz\r\n    }\r\n}\r\n\r\n//actionCreator for Quiz(COMPONENT) in qiuzAnswerClick(idAnswer)\r\nexport function qiuzAnswerClick(idAnswer) { \r\n    return (dispatch, getState) => {\r\n\r\n        //доступный State с getState().quiz\r\n        // resalts: {},\r\n        // isFinished: false,\r\n        // activeQuestion: 0,\r\n        // answerState: null,\r\n        // loading: true,  //удаляем,так как loading уже есть\r\n        // quiz: null\r\n\r\n        const state = getState().quiz\r\n\r\n        if(state.answerState) {\r\n            const key = Object.keys(state.answerState)\r\n            if(state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion]\r\n        const resalts = state.resalts\r\n\r\n        if(question.rightAnswer === idAnswer) {\r\n            if(!resalts[question.id]) {\r\n                resalts[question.id] = 'success'\r\n            }\r\n\r\n            dispatch(quizSetState({[idAnswer]: 'success'}, resalts))\r\n\r\n            // this.setState({\r\n            //     answerState: {[idAnswer]: 'success'},\r\n            //     resalts\r\n            // })\r\n            \r\n            const timeOut = window.setTimeout(() => {\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(finishQuiz())\r\n                    // this.setState({\r\n                    //     isFinished: true\r\n                    // })\r\n                    // console.log('Finished')\r\n                } else {\r\n\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                    // this.setState({\r\n                    //     activeQuestion: this.state.activeQuestion + 1,\r\n                    //     answerState: null,\r\n                    // })\r\n                }\r\n                window.clearTimeout(timeOut)\r\n            }, 1000)\r\n\r\n        } else {\r\n            resalts[question.id] = 'error'\r\n\r\n            dispatch(quizSetState({[idAnswer]: 'error'}, resalts))\r\n\r\n            // this.setState({\r\n            //     answerState:  {[idAnswer]: 'error'},\r\n            //     resalts\r\n            // })\r\n        }\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, resalts) { //actionCreator for Quiz qiuzAnswerClick(idAnswer)\r\n    return {\r\n        type: quiz_Set_State,\r\n        answerState,\r\n        resalts\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {  //actionCreator for Quiz qiuzAnswerClick(idAnswer)\r\n    return {\r\n        type: finish_Quiz\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(activeQuestion) { //actionCreator for Quiz qiuzAnswerClick(idAnswer)\r\n    return {\r\n        type: quiz_Next_Question,\r\n        activeQuestion\r\n    }\r\n}\r\n\r\nfunction isQuizFinished (state) { // function in qiuzAnswerClick(idAnswer)\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\n\r\nexport function retryQuiz() {  //componentWillUnmount(){ this.props.retryQuiz()}   \r\n    return {                   //actionCreator for Quiz retryQuiz()\r\n        type: retry_Quiz\r\n    }\r\n    \r\n}\r\n\r\n","export const fetch_Quizes_Start = 'fetch_Quizes_Start'\r\nexport const fetch_Quizes_Success = 'fetch_Quizes_Success'\r\nexport const fetch_Quizes_Error = 'fetch_Quizes_Error'\r\nexport const fetch_Quiz_Success = 'fetch_Quiz_Success'\r\nexport const quiz_Set_State = 'quiz_Set_State'\r\nexport const finish_Quiz = 'finish_Quiz'\r\nexport const quiz_Next_Question = 'quiz_Next_Question'\r\nexport const retry_Quiz = 'retry_Quiz'\r\nexport const create_Quiz_Question = 'create_Quiz_Question'\r\nexport const reset_Quiz_Creation = 'reset_Quiz_Creation'\r\nexport const auth_Success = 'auth_success'\r\nexport const auth_Logout = 'auth_Logout'","// import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\nimport Loader from '../../components/UI/Louder/Louder';\r\nimport classes from './Quiz.module.css';\r\nimport { fetchQuizById, qiuzAnswerClick, retryQuiz } from '../../store/actions/quiz';\r\n\r\nclass Quiz extends Component {\r\n\r\n    // state={\r\n    //исходны state\r\n        // resalts: {},\r\n        // isFinished: false,\r\n        // activeQuestion: 0,\r\n        // answerState: null,\r\n        // loading: true,\r\n        // quiz: [],\r\n\r\n        // Исходный массив,по котрому создавали вопросы; ActiveQuiz > AnswerList > ActiveItem\r\n        // quiz: [\r\n        //     {   \r\n        //         question: 'Какого цвета небо?',\r\n        //         rightAnswer: 2,\r\n        //         id: 1,\r\n        //         answers: [\r\n        //             {text: 'Черный', id: 1},\r\n        //             {text: 'Синий', id: 2},\r\n        //             {text: 'Красный', id: 3},\r\n        //             {text: 'Зеленый', id: 4}\r\n        //         ]\r\n        //     },\r\n        //     {   \r\n        //         question: 'Какой го Санкт-Петербург',\r\n        //         rightAnswer: 3,\r\n        //         id: 2,\r\n        //         answers: [\r\n        //             {text: '1701', id: 1},\r\n        //             {text: '1702', id: 2},\r\n        //             {text: '1703', id: 3},\r\n        //             {text: '1704', id: 4}\r\n        //         ]\r\n        //     }\r\n        // ]\r\n    // }\r\n    // вместо onAnswerClickHandler передаем сразу qiuzAnswerClick (this.props.qiuzAnswerClick)\r\n    // onAnswerClickHandler = idAnswer => {\r\n        // if(this.state.answerState) {\r\n        //     const key = Object.keys(this.state.answerState)\r\n        //     if(this.state.answerState[key] === 'success') {\r\n        //         return\r\n        //     }\r\n        // }\r\n\r\n        // const question = this.state.quiz[this.state.activeQuestion]\r\n        // const resalts = this.state.resalts\r\n\r\n        // if(question.rightAnswer === idAnswer) {\r\n        //     if(!resalts[question.id]) {\r\n        //         resalts[question.id] = 'success'\r\n        //     }\r\n\r\n        //     this.setState({\r\n        //         answerState: {[idAnswer]: 'success'},\r\n        //         resalts\r\n        //     })\r\n            \r\n        //     const timeOut = window.setTimeout(() => {\r\n        //         if (this.isQuizFinished()) {\r\n        //             this.setState({\r\n        //                 isFinished: true\r\n        //             })\r\n        //             console.log('Finished')\r\n        //         } else {\r\n        //             this.setState({\r\n        //                 activeQuestion: this.state.activeQuestion + 1,\r\n        //                 answerState: null,\r\n        //             })\r\n        //         }\r\n        //         window.clearTimeout(timeOut)\r\n        //     }, 1000)\r\n\r\n        // } else {\r\n        //     resalts[question.id] = 'error'\r\n        //     this.setState({\r\n        //         answerState:  {[idAnswer]: 'error'},\r\n        //         resalts\r\n        //     })\r\n        // }\r\n\r\n        \r\n    // }\r\n\r\n\r\n\r\n    //переносим в actioncreator qiuzAnswerClick(idAnswer)\r\n    // isQuizFinished = () =>{\r\n    //     return this.state.activeQuestion + 1 === this.state.quiz.length\r\n    // }\r\n\r\n    // retryHandler = () => {\r\n    //     this.setState({\r\n    //         resalts: {},\r\n    //         isFinished: false,\r\n    //         activeQuestion: 0,\r\n    //         answerState: null\r\n    //     })\r\n    // }\r\n\r\n    componentDidMount () {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n\r\n    // async componentDidMount () {\r\n    //     // try {\r\n    //     //     const response = await axios.get(`https://react-quiz-6002a.firebaseio.com/quizes/${this.props.match.params.id}.json`)\r\n    //     //     const quiz = response.data\r\n\r\n    //     //     // console.log(response, quiz)\r\n\r\n    //     //     this.setState({\r\n    //     //         quiz,\r\n    //     //         loading: false\r\n    //     //     })\r\n\r\n    //     //     console.log(this.state.quiz)\r\n\r\n\r\n    //     // } catch (err) {\r\n    //     //     console.log(err)\r\n    //     // }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                <h1>Ответьте на вопросы</h1>\r\n                \r\n                { \r\n                    this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished\r\n                                ? <FinishedQuiz \r\n                                        retry = {this.props.retryQuiz}\r\n                                        resalts={this.props.resalts}\r\n                                        quiz={this.props.quiz}\r\n                                    /> \r\n                                : <ActiveQuiz \r\n                                        question = {this.props.quiz[this.props.activeQuestion].question}\r\n                                        answers = {this.props.quiz[this.props.activeQuestion].answers}\r\n                                        // onAnswerClick = {this.onAnswerClickHandler}\r\n                                        onAnswerClick = {this.props.qiuzAnswerClick}\r\n                                        quizLength = {this.props.quiz.length}\r\n                                        answerNumber = {this.props.activeQuestion + 1}\r\n                                        state = {this.props.answerState}\r\n                                        >\r\n                                    </ActiveQuiz>\r\n                }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        resalts: state.quiz.resalts,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        qiuzAnswerClick: idAnswer => dispatch(qiuzAnswerClick(idAnswer)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Quiz)\r\n","import React, { Component } from 'react'\r\nimport classes from './QiuzList.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n// import axios from 'axios'\r\nimport Louder from '../../components/UI/Louder/Louder'\r\nimport { connect } from 'react-redux'\r\nimport { fetchQuizes } from '../../store/actions/quiz'\r\n \r\n class QiuzList extends Component {\r\n\r\n    // state = {\r\n    //     quizes: [],\r\n    //     loading: true\r\n    // }\r\n\r\n    renderQuiz() {\r\n        return this.props.quizes.map((quiz, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={'/quiz/' + quiz.id}\r\n                    >{quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n   componentDidMount () {\r\n       this.props.fetchQuizes()\r\n        // try {\r\n        //    const response = await axios.get('https://react-quiz-6002a.firebaseio.com/quizes.json')\r\n        //     // console.log(response.data)\r\n           \r\n        //     const quizes = []\r\n             \r\n        //     // eslint-disable-next-line\r\n        //     Object.keys(response.data).map((key, index) => {\r\n        //         quizes.push({\r\n        //             id: key,\r\n        //             name: `Тест ${index + 1}`\r\n        //         })\r\n        //     })\r\n\r\n        //     this.setState({\r\n        //         quizes,\r\n        //         loading: false\r\n        //     })\r\n\r\n        // } catch (err) {\r\n        //     console.log(err)\r\n        // }\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.QiuzList}>\r\n\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                            ? <Louder />\r\n                            : <ul>{this.renderQuiz()}</ul>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { \r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QiuzList)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export function createControls(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: true,\r\n        value: ''\r\n    }\r\n}\r\n\r\n// label: \"Вариант 1\"\r\n// errorMessage: \"Значение не может быть пустым\"\r\n// validation: {required: true}\r\n// valid: !validation, false\r\n// touched: true\r\n// value: \"\"\r\n\r\nexport function validate(value, validation = null) {\r\n    if(!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isValidForm = true\r\n\r\n    for (let control in formControls) {\r\n        if(formControls.hasOwnProperty(control)) {\r\n            isValidForm = formControls[control].valid && isValidForm\r\n        }\r\n    }\r\n\r\n    return isValidForm\r\n}","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = props => {\r\n\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    const htmlFor = `${inputType} - ${Math.random()}`\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input \r\n                id={htmlFor}\r\n                value={props.value}\r\n                type={inputType}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                props.errorMessage\r\n                ? <span>{props.errorMessage}</span>\r\n                : null\r\n            }\r\n            \r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react';\r\nimport classes from './Select.module.css';\r\n\r\nconst Select = (props) => {\r\n\r\n    const htmlFor = `${props.label} - ${Math.random()}`\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label\r\n                htmlFor={htmlFor}\r\n            >\r\n                    {props.label}\r\n             \r\n             </label>\r\n\r\n            <select \r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                id={htmlFor}>\r\n\r\n                    {props.options.map((option, index) => {\r\n                        return (\r\n                        <option\r\n                            key={index} \r\n                            value={option.value}\r\n                        >\r\n                            {option.text}\r\n                        </option>)\r\n                    })}\r\n\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import React, { Component } from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport {createControls, validate, validateForm} from '../../components/Form/formFramework'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\n// import axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { createQuizQuestion, finishCreateQuiz } from '../../store/actions/create'\r\n\r\nfunction createOptionControl(number) {\r\n    return createControls(\r\n        {\r\n        label: `Вариант ${number}`,\r\n        errorMessage: '',\r\n        id: number\r\n        },\r\n        {required: true})\r\n}\r\n\r\nfunction createFormControl() {\r\n    return {\r\n        question: createControls(            //каждый input\r\n            {\r\n            label: 'Введите вопрос',\r\n            errorMessage: ''\r\n            // errorMessage: 'Вопрос не может быть пустым' // Вариант Владилена\r\n            },\r\n            {required: true}),\r\n        option1: createOptionControl(1),    //каждый input\r\n        option2: createOptionControl(2),    //каждый input\r\n        option3: createOptionControl(3),    //каждый input\r\n        option4: createOptionControl(4)     //каждый input\r\n        // label: \"Вариант 1\"\r\n        // errorMessage: \"Значение не может быть пустым\"\r\n        // validation: {required: true}\r\n        // valid: false\r\n        // touched: true\r\n        // value: \"\"\r\n    }\r\n}\r\n\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state= {\r\n        // quiz: [],\r\n        isValidForm: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControl()\r\n\r\n        // formControls:\r\n                // question:\r\n                    // label: \"Введите вопрос\"\r\n                    // errorMessage: \"\"\r\n                    // validation: {required: true}\r\n                    // valid: false\r\n                    // touched: true\r\n                    // value: \"\"\r\n                // option1:\r\n                    // label: \"Вариант 1\"\r\n                    // errorMessage: \"\"\r\n                    // id: 1\r\n                    // validation: {required: true}\r\n                    // valid: false\r\n                    // touched: true\r\n                    // value: \"\"\r\n                // option2: {label: \"Вариант 2\", errorMessage: \"\", id: 2, validation: {…}, valid: false, …}\r\n                // option3: {label: \"Вариант 3\", errorMessage: \"\", id: 3, validation: {…}, valid: false, …}\r\n                // option4: {label: \"Вариант 4\", errorMessage: \"\", id: 4, validation: {…}, valid: false, …}\r\n         \r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        // const quiz = this.state.quiz.concat()\r\n        // const index = quiz.length + 1\r\n \r\n        const questionItems = {\r\n            question: this.state.formControls.question.value,\r\n            id: this.props.length + 1,\r\n            rightAnswer: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: this.state.formControls.option1.value,\r\n                id: this.state.formControls.option1.id\r\n                },\r\n                {text: this.state.formControls.option2.value,\r\n                id: this.state.formControls.option2.id\r\n                },\r\n                {text: this.state.formControls.option3.value,\r\n                id: this.state.formControls.option3.id\r\n                },\r\n                {text: this.state.formControls.option4.value,\r\n                id: this.state.formControls.option4.id\r\n                }\r\n            ]\r\n        }\r\n\r\n        // quiz.push(questionItems)\r\n\r\n        this.props.createQuizQuestion(questionItems)\r\n\r\n        this.setState({\r\n            // quiz,\r\n            isValidForm: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControl()\r\n        })\r\n\r\n    }\r\n\r\n    createQuizHandler = async event => {\r\n        event.preventDefault()\r\n\r\n        this.props.finishCreateQuiz()\r\n\r\n        this.setState({\r\n            isValidForm: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControl()\r\n        })\r\n\r\n\r\n        // try {\r\n        //     await axios.post('https://react-quiz-6002a.fire baseio.com/quizes.json', this.state.quiz)\r\n\r\n        //     this.setState({\r\n        //         quiz: [],\r\n        //         isValidForm: false,\r\n        //         rightAnswerId: 1,\r\n        //         formControls: createFormControl()\r\n        //     })\r\n        // } \r\n        // catch(e) {\r\n        //     console.log(e)\r\n        // }\r\n    }\r\n\r\n    changeHandler = (value , controlName) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const inputKind = { ...formControls[controlName] }\r\n\r\n        inputKind.touched = true\r\n        inputKind.value = value\r\n        inputKind.valid = validate(inputKind.value, inputKind.validation)\r\n\r\n\r\n        //Мой код, вывод ошибки\r\n        if(controlName && value !== '') {\r\n            inputKind.errorMessage = ''\r\n        }\r\n        else {\r\n            inputKind.errorMessage = 'Значение не может быть пустым'\r\n        }\r\n    \r\n        //Мой код, вывод ошибки\r\n\r\n        formControls[controlName] = inputKind\r\n\r\n        this.setState({\r\n            formControls,\r\n            isValidForm: validateForm(formControls)\r\n        })\r\n\r\n    }\r\n\r\n    renderControls = () => {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <React.Fragment key={index}>\r\n                <Input\r\n                    label={control.label}\r\n                    value={control.value}\r\n                    // valid={control.valid}\r\n                    // touched={control.touched}\r\n                    // shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                />\r\n\r\n                {index === 0 ? <hr/> : null}\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    // componentDidMount () {\r\n    //     console.log(this.state.quiz)\r\n    // }\r\n\r\n    selectChangeHandler =  event => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n    const select = <Select \r\n        label=\"Выберите правильный ответ\"\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options ={[\r\n            {text: 1, value: 1},\r\n            {text: 2, value: 2},\r\n            {text: 3, value: 3},\r\n            {text: 4, value: 4}\r\n        ]}\r\n        />\r\n\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создать тест</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}> \r\n\r\n                    {this.renderControls()}\r\n\r\n                    {select}\r\n\r\n                    <Button \r\n                        type=\"primary\"\r\n                        onClick={this.addQuestionHandler}\r\n                        disabled={!this.state.isValidForm}\r\n                    >\r\n                        Добавить вопрос\r\n                    </Button>\r\n                    \r\n                    <Button \r\n                        type=\"success\"\r\n                        onClick={this.createQuizHandler}\r\n                        disabled={this.props.quiz.length === 0}\r\n                    >\r\n                        Создать тест\r\n                    </Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}     \r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion: question => dispatch(createQuizQuestion(question)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import { create_Quiz_Question, reset_Quiz_Creation } from \"./actionsTypes\"\r\nimport axios from \"axios\"\r\n\r\nexport function createQuizQuestion(question) {\r\n    return {\r\n        type: create_Quiz_Question,\r\n        question\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: reset_Quiz_Creation\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('https://react-quiz-6002a.firebaseio.com/quizes.json', getState().create.quiz)\r\n\r\n        dispatch(resetQuizCreation())\r\n    }\r\n\r\n   \r\n}","import axios from \"axios\"\r\nimport { auth_Success, auth_Logout } from \"./actionsTypes\"\r\n\r\nexport function auth(email, password, isLogin) {\r\n   return async dispath => {\r\n        const authData= {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA8i-6oxv97BjCiEbiQfymKXbOyt8e1hCo'\r\n\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA8i-6oxv97BjCiEbiQfymKXbOyt8e1hCo'\r\n        }\r\n\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n\r\n        console.log(data)\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)//js дата 1588199178494 из-за .getTime() \r\n        console.log('expirationDate: ', expirationDate);\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispath(authSuccess(data.idToken))\r\n\r\n        dispath(authLogout(data.expiresIn))\r\n\r\n   }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: auth_Success,\r\n        token\r\n    }\r\n}\r\n\r\nexport function authLogout(time) {\r\n    return dispath => {\r\n        setTimeout(() => {\r\n            dispath(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n\r\n    return {\r\n        type: auth_Logout \r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispath => {\r\n        const token = localStorage.getItem('token') \r\n        if(!token) {\r\n            dispath(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate')) //преобразовуем не в js дата\r\n            if (expirationDate <= new Date()) {\r\n                dispath(logout())\r\n            } else {\r\n                dispath(authSuccess(token))\r\n\r\n                dispath(authLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n                \r\n            }\r\n        }\r\n    } \r\n}","import React, { Component } from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\n// import axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { auth } from '../../store/actions/auth'\r\n\r\n\r\nfunction validateEmail(email) {\r\n    // eslint-disable-next-line\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {     \r\n                email: {\r\n                    value: '',\r\n                    type: 'c',\r\n                    errorMessage: '',\r\n                    label: 'email',\r\n                    valid: false\r\n                },\r\n                password: {\r\n                    value: '',\r\n                    type: 'password',\r\n                    errorMessage: '',\r\n                    label: 'Пароль',\r\n                    valid: false\r\n                },\r\n        }\r\n    }\r\n\r\n    \r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true)\r\n\r\n        // const authData= {\r\n        //     email: this.state.formControls.email.value,\r\n        //     password: this.state.formControls.password.value,\r\n        //     returnSecureToken: true\r\n        // }\r\n\r\n        // try {\r\n        //     const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA8i-6oxv97BjCiEbiQfymKXbOyt8e1hCo', authData)\r\n        //     console.log(response.data)\r\n        // } catch(err) {\r\n        //     console.log(err)\r\n        // }\r\n    \r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false)\r\n\r\n        // const authData= {\r\n        //     email: this.state.formControls.email.value,\r\n        //     password: this.state.formControls.password.value,\r\n        //     returnSecureToken: true\r\n        // }\r\n\r\n        // try {\r\n        //     const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA8i-6oxv97BjCiEbiQfymKXbOyt8e1hCo', authData)\r\n        //     console.log(response.data)\r\n        // } catch(err) {\r\n        //     console.log(err)\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    onChange = (event, inputName) => {\r\n        const valueInput = event.target.value.trim()\r\n\r\n        const formControls = { ...this.state.formControls }\r\n        const inputKind = { ...formControls[inputName] }\r\n\r\n        inputKind.value = valueInput\r\n\r\n        if (inputName === 'email') {\r\n            if (validateEmail(valueInput)) {\r\n                inputKind.errorMessage = ''\r\n                inputKind.valid = true\r\n            }  else {\r\n                inputKind.errorMessage = `Введите верный ${inputName}`\r\n                inputKind.valid = false\r\n            }\r\n        }\r\n\r\n        if (inputName === 'password') {\r\n            if (Number(valueInput) && valueInput.length > 5) {\r\n                inputKind.errorMessage = ''\r\n                inputKind.valid = true\r\n            } else {\r\n                inputKind.errorMessage = `Введите верный ${inputName}`\r\n                inputKind.valid = false\r\n            } \r\n        }\r\n\r\n        formControls[inputName] = inputKind\r\n\r\n        let isFormValid = true\r\n\r\n        // eslint-disable-next-line\r\n        Object.keys(formControls).map(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            isFormValid, formControls \r\n        })\r\n    }\r\n\r\n\r\n    renderInputs () {\r\n        return Object.keys(this.state.formControls).map((inputName, key) => {\r\n            const input = this.state.formControls[inputName];\r\n\r\n            return (\r\n                <Input \r\n                    key={key}\r\n                    label={input.label}\r\n                    type={input.type}\r\n                    value={input.value}\r\n                    errorMessage={input.errorMessage}\r\n                    onChange={event => this.onChange(event, inputName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n                        {this.renderInputs()}\r\n\r\n                        <Button \r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                            >\r\n                            Войти\r\n                        </Button>\r\n\r\n                        <Button \r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                            >\r\n                            Зарегестрироваться\r\n                        </Button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { logout } from '../../store/actions/auth'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        \r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Redirect to={'/'}/>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport Layout from './hoc/Layout/Layout'\nimport Quiz from './containers/Quiz/Quiz'\nimport QiuzList from './containers/QiuzList/QiuzList'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport Auth from './containers/Auth/Auth'\nimport { connect } from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport { autoLogin } from './store/actions/auth'\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n    \n  }\n\n  render() {\n  \n    let routes = (\n      <Switch>\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/quiz-creator\" component={QuizCreator} />\n            <Route path=\"/quiz/:id\" component={Quiz} />\n            <Route path=\"/\" exact component={QiuzList} />\n            <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n              <Route path=\"/quiz-creator\" component={QuizCreator} />\n              <Route path=\"/quiz/:id\" component={Quiz} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/\" exact component={QiuzList} />\n              <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n        <Layout>\n          {routes}\n          {/* <Quiz/> */}\n        </Layout>\n    )\n    }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { \r\n    fetch_Quizes_Start, \r\n    fetch_Quizes_Success, \r\n    fetch_Quizes_Error, \r\n    fetch_Quiz_Success, \r\n    quiz_Set_State,\r\n    quiz_Next_Question,\r\n    finish_Quiz,\r\n    retry_Quiz\r\n} from '../actions/actionsTypes'\r\n\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false, \r\n    error: null,\r\n    // state of Quiz Component\r\n    resalts: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    // loading: true,  //удаляем,так как loading уже есть\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case fetch_Quizes_Start:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case fetch_Quizes_Success:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case fetch_Quizes_Error:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case fetch_Quiz_Success:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case quiz_Set_State:\r\n            return {\r\n                ...state, answerState: action.answerState, resalts: action.resalts\r\n            }\r\n        case finish_Quiz:\r\n            return {\r\n                ...state, isFinished: true\r\n            }\r\n        case quiz_Next_Question:\r\n            return {\r\n                ...state, answerState: null, activeQuestion: action.activeQuestion\r\n            }\r\n        case retry_Quiz:\r\n            return {\r\n                ...state, \r\n                resalts: {},\r\n                isFinished: false,\r\n                activeQuestion: 0,\r\n                answerState: null\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import { create_Quiz_Question, reset_Quiz_Creation } from \"../actions/actionsTypes\"\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n   switch (action.type) {\r\n       case create_Quiz_Question:\r\n           return {\r\n               ...state,\r\n               quiz: [...state.quiz, action.question] //так добавляем в массив еше один объект(вопрос),  \r\n           }                                          //без [...state.quiz, не будет копироваться существующий\r\n        case reset_Quiz_Creation:                     //и к нему новый объект, а просто перезаписываться каждыц раз новый\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n      default: \r\n       return state\r\n   }\r\n}","import { auth_Success, auth_Logout } from \"../actions/actionsTypes\"\r\n\r\nlet initialState = {\r\n    token: false\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case auth_Success:\r\n            return {\r\n                ...state, token: action.token\r\n            } \r\n        case auth_Logout: \r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from './auth'\r\n\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider} from 'react-redux'\nimport combineReducers from './store/reducers/rootReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\n// const app = (\n//   <BrowserRouter> \n//     <App />\n//   </BrowserRouter>\n// )\n\nconst store = createStore(\n  combineReducers,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  ))\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}